{"version":3,"sources":["img/defaultPoster.png","api/api.js","reducers/MainReducer.js","components/MoviesCell.js","components/Main.js","components/EpicMenu.js","components/Content.js","components/SearchFilter.js","App.js","reducers/ReduxStore.js","index.js"],"names":["module","exports","__webpack_require__","p","token","instance","axios","baseURL","API","sort","arguments","length","undefined","order","types","camrip","genres","genresUrl","concat","get","then","response","data","catch","error","console","log","title","initialState","isVisible","activeView","activeArticle","activeFilter","activeCategory","searchCategory","subCategory","width","height","filmsList","activeStory","activeModal","modalHistory","scheme","isReady","react_default","a","createElement","ScreenSpinner","defaultIframeUrl","moviesInfo","id","title_orig","other_title","link","year","kinopoisk_id","imdb_id","created_at","updated_at","material_data","poster_url","currentListOptions","limit","nextListOptions","search","activeArticleAC","article","type","activeViewAC","activeFilterAC","activeCategoryAC","activeStoryAC","activeModalAC","setSchemeAC","setIframeUrlAC","setMoviesInfoAC","modalHistoryAC","widthAC","heightAC","getMovieListAC","setSortAC","setOrderAC","setTypesAC","setCamripAC","setYearAC","getMovieListThunkCreator","listOptions","dispatch","MainReducer","state","action","Object","objectSpread","schemeAttribute","document","createAttribute","value","body","attributes","setNamedItem","url","includes","slice","results","name","MoviesCell","props","className","onClick","setIframeUrl","movies","setMoviesInfo","setActiveModal","src","require","alt","Main","es6","list","map","components_MoviesCell","key","EpicMenu","connect","main","setActiveStory","activeModel","setActiveView","setTypes","getMovieList","setActiveCategory","setSort","setOrder","setCamrip","Epic_default","tabbar","Tabbar_default","TabbarItem_default","data-story","newsfeed_default","selected","search_default","favorite_outline_default","notifications_default","settings_outline_default","Content","setActiveArticle","setActiveFilter","setModalHistory","setScheme","currentTarget","checked","setWidth","setHeight","setYear","popout","activePanel","modal","noShadow","vertical","theme","components_EpicMenu","components_Main","SubSelect","Select","placeholder","onChange","setTypesFilter","category","SearchFilter","e","onChangeSearch","onChangeFilterCategory","searchMovie","searchMovieThunkCreator","setGenres","addon","HeaderButton","FormLayout","Input","Button","size","disabled","FormLayoutGroup","top","SearchFilter_SubSelect","asideContent","Div","dataApp","modalBack","_this","connectVK","send","this","JSON","stringify","onChangeListOptions","toConsumableArray","indexOf","splice","push","_this2","onClose","header","left","IS_PLATFORM_ANDROID","cancel_default","right","IS_PLATFORM_IOS","done_default","frameBorder","allowFullScreen","components_Content","components_SearchFilter","React","Component","App","onChangeListOptionsAC","reducers","combineReducers","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.5934292d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultPoster.c971e3c9.png\";","import * as axios from \"axios-jsonp-pro\";\r\n\r\nconst token= \"7f129085d2f372833fcc5e2116e4d0a4\"\r\nconst instance = axios.create({\r\n    baseURL: 'https://kodikapi.com/'\r\n});\r\n\r\nexport const API = {\r\n    getMovieList(sort = 'updated_at', order = 'desc', types = 'foreign-movie',  camrip = true,  year,  genres = null){\r\n        let limit = 21;\r\n        if (camrip === true) {camrip=\"\"};\r\n        let genresUrl = `&genres=${genres}`;\r\n        if (genres === null) {genresUrl=\"\"};\r\n        return instance.get(`list?token=${token}&limit=${limit}&sort=${sort}&order=${order}&types=${types}&camrip=${camrip}${genresUrl}&with_material_data=true`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(function (error) {\r\n                debugger\r\n                console.log(error);\r\n            });\r\n    },\r\n    searchMovie(title){\r\n        return instance.get(`search?token=${token}&title=${title}&with_material_data=true`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(function (error) {\r\n                debugger\r\n                console.log(error);\r\n            });\r\n    },\r\n};\r\n","import {API} from \"../api/api\";\r\nimport React from \"react\";\r\nimport ScreenSpinner from \"@vkontakte/vkui/dist/es6/components/ScreenSpinner/ScreenSpinner\";\r\n\r\nconst SET_TOKEN = 'SET_TOKEN';\r\nconst SET_ARTICLE= 'SET_ARTICLE';\r\nconst SET_FILTER= 'SET_FILTER';\r\nconst SET_VIEW= 'SET_VIEW';\r\nconst SET_CATEGORY= 'SET_CATEGORY';\r\nconst SET_WIDTH= 'SET_WIDTH';\r\nconst SET_HEIGHT= 'SET_HEIGHT';\r\nconst SET_STORY= 'SET_STORY';\r\nconst SET_SCHEME= 'SET_SCHEME';\r\nconst SET_IFRAME_URL= 'SET_IFRAME_URL';\r\nconst SET_MOVIE_INFO= 'SET_MOVIE_INFO';\r\nconst SET_MOVIE_SORT= 'SET_MOVIE_SORT';\r\nconst SET_MOVIE_ORDER= 'SET_MOVIE_ORDER';\r\nconst SET_MOVIE_TYPES= 'SET_MOVIE_TYPES';\r\nconst SET_MOVIE_CAMRIP= 'SET_MOVIE_CAMRIP';\r\nconst SET_MOVIE_YEAR= 'SET_MOVIE_YEAR';\r\nconst GET_NEW_MOVIE_LIST= 'GET_NEW_MOVIE_LIST';\r\nconst ON_CHANGE_SEARCH= 'ON_CHANGE_SEARCH';\r\nconst ON_CHANGE_FILTER_CATEGORY= 'ON_CHANGE_FILTER_CATEGORY';\r\nconst SET_ACTIVE_MODAL_PAGE = 'SET_ACTIVE_MODAL_PAGE';\r\nconst SET_MODAL_HISTORY = 'SET_MODAL_HISTORY';\r\nconst CHANGE_LIST_OPTIONS = 'CHANGE_LIST_OPTIONS';\r\nconst SET_MOVIE_GENRES = 'SET_MOVIE_GENRES';\r\n\r\nlet initialState = {\r\n    token: \"\",\r\n    isVisible: false,\r\n    activeView: \"content\",\r\n    activeArticle: \"films\",\r\n    activeFilter: \"top\",\r\n    activeCategory: \"films\",\r\n    searchCategory: \"\",\r\n    subCategory: [],\r\n    width: \"20\",\r\n    height: \"20\",\r\n    filmsList: {},\r\n    activeStory: null,\r\n    activeModal: null,\r\n    modalHistory: [],\r\n    scheme: false,\r\n    isReady: <ScreenSpinner />,\r\n    defaultIframeUrl: \"\",\r\n    moviesInfo: {\r\n        id: \"\",\r\n        title: \"\", //название\r\n        title_orig: \"\", //Оригинальное название\r\n        other_title: \"\", //другое название, у аниме\r\n        link: \"\", //Ссылка на плеер\r\n        year: \"\",\r\n        kinopoisk_id: \"\",\r\n        imdb_id: \"\",\r\n        camrip: \"\",\r\n        created_at: \"\", //Дата создания материала.\r\n        updated_at: \"\", // Дата обновления материала.\r\n        material_data: {\r\n            poster_url: \"\"\r\n        }\r\n    },\r\n    currentListOptions: {\r\n        limit: 21, //количество материалов, выводимое за один раз.\r\n        sort: 'updated_at', //сортировка year, created_at, updated_at\r\n        order: 'desc', // направление сортировки asc (по возрастанию), desc (по убыванию)\r\n        types: 'foreign-movie,russian-movie', // фильтрация по типу, мультиики фильмы и  т.д.\r\n        year: \"\", //фильтр по году\r\n        camrip: true,\r\n        genres: null\r\n    },\r\n    nextListOptions: {\r\n        limit: 21, //количество материалов, выводимое за один раз.\r\n        sort: 'updated_at', //сортировка year, created_at, updated_at\r\n        order: 'desc', // направление сортировки asc (по возрастанию), desc (по убыванию)\r\n        types: 'foreign-movie,russian-movie', // фильтрация по типу, мультиики фильмы и  т.д.\r\n        year: \"\", //фильтр по году\r\n        camrip: true,\r\n        genres: null\r\n    },\r\n    search: \"\"\r\n};\r\n\r\nconst MainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TOKEN:\r\n            return {...state, token: action.token};\r\n        case SET_ARTICLE:\r\n            return {...state, activeArticle: action.article};\r\n        case SET_VIEW:\r\n            return {...state, activeView: action.activeView};\r\n        case SET_CATEGORY:\r\n            return {...state, activeCategory: action.activeCategory};\r\n        case SET_FILTER:\r\n            return {...state, activeFilter: action.activeFilter};\r\n        case SET_STORY:\r\n            return {...state, activeStory: action.activeStory};\r\n        case SET_SCHEME:\r\n            let schemeAttribute = document.createAttribute('scheme');\r\n            schemeAttribute.value = action.scheme ? 'client_dark' : 'client_light';\r\n            document.body.attributes.setNamedItem(schemeAttribute);\r\n            return {...state, scheme: action.scheme};\r\n        case SET_ACTIVE_MODAL_PAGE:\r\n            return {...state, activeModal: action.activeModal};\r\n        case SET_MODAL_HISTORY:\r\n            return {...state, modalHistory: action.modalHistory};\r\n        case SET_IFRAME_URL:\r\n            let url = action.defaultIframeUrl;\r\n            if (url.includes(\"http:\")) {\r\n                url = \"https\" + url.slice(4);\r\n            }\r\n            return {...state, defaultIframeUrl: action.defaultIframeUrl};\r\n        case SET_MOVIE_INFO:\r\n            return {...state, moviesInfo: action.moviesInfo};\r\n        case SET_WIDTH:\r\n            return {...state, width: action.width};\r\n        case SET_HEIGHT:\r\n            return {...state, height: action.height};\r\n        case GET_NEW_MOVIE_LIST:\r\n            return {...state, filmsList: action.filmsList.results, isReady: null};\r\n        case SET_MOVIE_SORT:\r\n            if (action.sort === '') {return state}\r\n            return {\r\n                ...state,\r\n                nextListOptions: {\r\n                    ...state.nextListOptions,\r\n                    sort: action.sort\r\n                }\r\n            };\r\n        case SET_MOVIE_ORDER:\r\n            if (action.order === '') {return state}\r\n            return {\r\n                ...state,\r\n                nextListOptions: {\r\n                    ...state.nextListOptions,\r\n                    order: action.order\r\n                }\r\n            };\r\n        case SET_MOVIE_TYPES:\r\n            if (action.types === '') {return state}\r\n            return {\r\n                ...state,\r\n                nextListOptions: {\r\n                    ...state.nextListOptions,\r\n                    types: action.types\r\n                }\r\n            };\r\n        case SET_MOVIE_CAMRIP:\r\n            return {\r\n                ...state,\r\n                nextListOptions: {\r\n                    ...state.nextListOptions,\r\n                    camrip: action.camrip\r\n                }\r\n            };\r\n        case SET_MOVIE_GENRES:\r\n            if (action.genres === '') {return state}\r\n            return {\r\n                ...state,\r\n                nextListOptions: {\r\n                    ...state.nextListOptions,\r\n                    genres: action.genres\r\n                }\r\n            };\r\n        case SET_MOVIE_YEAR:\r\n            return {...state, ...state.listOptions.year = action.year};\r\n        case ON_CHANGE_SEARCH:\r\n            return {...state, search: action.value};\r\n        case CHANGE_LIST_OPTIONS:\r\n            return {...state, currentListOptions: action.nextListOptions};\r\n        case ON_CHANGE_FILTER_CATEGORY:\r\n            switch (action.searchCategory) {\r\n                case \"movie\":\r\n                    let movie = [{\"value\": 'foreign-movie', \"name\": \"Зарубежные\"}, {\"value\": 'russian-movie', \"name\": 'Русские'}];\r\n                    return {...state, searchCategory: action.searchCategory, subCategory: movie};\r\n                case \"cartoons\":\r\n                    let cartoons = [{\"value\": 'foreign-cartoon', \"name\": \"Зарубежные\"}, {\"value\": 'soviet-cartoon', \"name\": \"Советские\"}, {\"value\": 'russian-cartoon', \"name\": 'Русские'}, {\"value\": 'cartoon-serial', \"name\": 'Зарубежные мультсериалы'}, {\"value\": 'russian-cartoon-serial', \"name\": 'Руские мультсериалы'}];\r\n                    return {...state, searchCategory: action.searchCategory, subCategory: cartoons};\r\n                case \"series\":\r\n                    let series = [{\"value\": 'foreign-serial', \"name\": \"Зарубежные сериалы\"}, {\"value\": 'documentary-serial', \"name\": \"Зарубежные документальные сериалы\"}, {\"value\": 'cartoon-serial', \"name\": \"Зарубежные мультсериалы\"}, {\"value\": 'russian-serial', \"name\": 'Русские сериалы'}, {\"value\": 'russian-documentary-serial', \"name\": 'Документальные русские сериалы'}, {\"value\": 'russian-cartoon-serial', \"name\": 'Русские мультсериалы'}, {\"value\": 'anime-serial', \"name\": 'Аниме сериалы'}];\r\n                    return {...state, searchCategory: action.searchCategory, subCategory: series};\r\n                case \"anime\":\r\n                    let anime = [{\"value\": 'anime', \"name\": \"Аниме\"}, {\"value\": 'anime-serial', \"name\": \"Сериалы аниме\"}];\r\n                    return {...state, searchCategory: action.searchCategory, subCategory: anime};\r\n                default:\r\n                    return {...state, searchCategory: action.searchCategory, subCategory: []};\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n// const showPositionAC = (positionData) => ({type: SHOW_POSITION, positionData: positionData});\r\nexport const activeArticleAC = (article) => ({type: SET_ARTICLE, article: article});\r\nexport const activeViewAC = (activeView) => ({type: SET_VIEW, activeView: activeView});\r\nexport const activeFilterAC = (activeFilter) => ({type: SET_FILTER, activeFilter: activeFilter});\r\nexport const activeCategoryAC = (activeCategory) => ({type: SET_CATEGORY, activeCategory: activeCategory});\r\nexport const activeStoryAC = (activeStory) => ({type: SET_STORY, activeStory: activeStory});\r\nexport const activeModalAC = (activeModal) => ({type: SET_ACTIVE_MODAL_PAGE, activeModal: activeModal});\r\nexport const setSchemeAC = (scheme) => ({type: SET_SCHEME, scheme: scheme});\r\nexport const setIframeUrlAC = (defaultIframeUrl) => ({type: SET_IFRAME_URL, defaultIframeUrl: defaultIframeUrl});\r\nexport const setMoviesInfoAC = (moviesInfo) => ({type: SET_MOVIE_INFO, moviesInfo: moviesInfo});\r\nexport const modalHistoryAC = (modalHistory) => ({type: SET_MODAL_HISTORY, modalHistory: modalHistory});\r\nexport const widthAC = (width) => ({type: SET_WIDTH, width: width});\r\nexport const heightAC = (height) => ({type: SET_HEIGHT, height: height});\r\nexport const onChangeSearchAC = (value) => ({type: ON_CHANGE_SEARCH, value: value});\r\nexport const onChangeFilterCategoryAC = (searchCategory) => ({type: ON_CHANGE_FILTER_CATEGORY, searchCategory: searchCategory});\r\nexport const onChangeListOptionsAC = (nextListOptions) => ({type: CHANGE_LIST_OPTIONS, nextListOptions: nextListOptions});\r\nconst getMovieListAC = (filmsList) => ({type: GET_NEW_MOVIE_LIST, filmsList: filmsList});\r\n\r\n//сортировки\r\nexport const setSortAC = (sort) => ({type: SET_MOVIE_SORT, sort: sort});\r\nexport const setOrderAC = (order) => ({type: SET_MOVIE_ORDER, order: order});\r\nexport const setTypesAC = (types) => ({type: SET_MOVIE_TYPES, types: types});\r\nexport const setCamripAC = (camrip) => ({type: SET_MOVIE_CAMRIP, camrip: camrip});\r\nexport const setYearAC = (year) => ({type: SET_MOVIE_YEAR, year: year});\r\nexport const setGenresAC = (genres) => ({type: SET_MOVIE_GENRES, genres: genres});\r\n\r\n\r\n\r\nexport const getMovieListThunkCreator = (listOptions) => {\r\n    let {sort, order, types, camrip, year, genres} = listOptions;\r\n    return (dispatch) => {\r\n        // dispatch(getFilmsListAC(dataTest));\r\n        API.getMovieList(sort, order, types, camrip, year, genres)\r\n            .then(data => {\r\n                dispatch(getMovieListAC(data));\r\n            })\r\n    }\r\n};\r\nexport const searchMovieThunkCreator = (title) => {\r\n    return (dispatch) => {\r\n        // dispatch(getFilmsListAC(dataTest));\r\n        API.searchMovie(title)\r\n            .then(data => {\r\n                dispatch(getMovieListAC(data));\r\n            })\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default MainReducer;","import React from 'react';\n\nconst MoviesCell = (props) => {\n\n\treturn (\n\t\t\t<div className='moviesCell' onClick={() => {\n                props.setIframeUrl(props.movies.link);\n\t\t\t\tprops.setMoviesInfo(props.movies);\n\t\t\t    props.setActiveModal(\"MODAL_PAGE_PLAY\")\n\t\t\t}}>\n\t\t\t\t<div className=\"moviesCellDiv\">\n\t\t\t\t\t<div className='moviesCell-img '>\n\t\t\t\t\t\t{ \"material_data\" in props.movies && \"poster_url\" in props.movies.material_data ? <img className=\"poster\" src={props.movies.material_data.poster_url || require(\"../img/defaultPoster.png\")} alt='poster'/> : <img className=\"poster\"  src={require(\"../img/defaultPoster.png\")} alt='poster'/>  }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='moviesCell-text'>\n\t\t\t\t\t\t<p><b>{props.movies.title}</b></p>\n\t\t\t\t\t\t{props.movies.year ? <p>Год: {props.movies.year}</p> : \"\"}\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t)\n}\n\n\n\n// Home.propTypes = {\n// \tid: PropTypes.string.isRequired,\n// \tgo: PropTypes.func.isRequired,\n// \tfetchedUser: PropTypes.shape({\n// \t\tphoto_200: PropTypes.string,\n// \t\tfirst_name: PropTypes.string,\n// \t\tlast_name: PropTypes.string,\n// \t\tcity: PropTypes.shape({\n// \t\t\ttitle: PropTypes.string,\n// \t\t}),\n// \t}),\n// };\n\nexport default MoviesCell;\n","import React from 'react';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { List } from '@vkontakte/vkui';\nimport MoviesCell from \"./MoviesCell\";\n\nconst Main = (props) => {\n\n\t\treturn (\n\t\t\t\t<List className=\"listDisplay\">\n\t\t\t\t\t{props.list.map((movies) => <MoviesCell\n\t\t\t\t\t\tkey={movies.id} movies={movies} setIframeUrl={props.setIframeUrl}\n\t\t\t\t\t\tsetActiveModal={props.setActiveModal} setMoviesInfo={props.setMoviesInfo}/>)}\n\t\t\t\t</List>\n\t\t);\n\n};\n\n\n\nexport default Main;\n","import React from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Epic from '@vkontakte/vkui/dist/components/Epic/Epic';\r\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar';\r\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem';\r\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\r\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\r\nimport Icon28FavoriteOutline from '@vkontakte/icons/dist/28/favorite_outline';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    activeCategoryAC,\r\n    activeModalAC,\r\n    activeStoryAC, activeViewAC, getMovieListThunkCreator, setCamripAC, setOrderAC, setSortAC, setTypesAC\r\n} from \"../reducers/MainReducer\";\r\n\r\n\r\nconst DataEpicMenu = (props) => {\r\n\r\n    return (\r\n        <Epic activeStory={props.state.activeStory} tabbar={\r\n            <Tabbar>\r\n                <TabbarItem\r\n                    onClick={() => {\r\n                        props.setActiveStory(\"feed\");\r\n                        props.setTypes(\"foreign-movie,russian-movie\");\r\n                        props.setActiveCategory(\"films\");\r\n                        props.setSort(\"updated_at\");\r\n                        props.setCamrip(true);\r\n                        props.setOrder('desc');\r\n                    }}\r\n                    data-story=\"feed\"\r\n                ><Icon28Newsfeed/></TabbarItem>\r\n                <TabbarItem\r\n                    onClick={() => {\r\n                        props.setActiveStory(\"discover\");\r\n                        props.setActiveView(\"search\")\r\n                    }}\r\n                    selected={props.state.activeStory === 'discover'}\r\n                    data-story=\"discover\"\r\n                ><Icon28Search/></TabbarItem>\r\n                <TabbarItem\r\n                    onClick={() => {\r\n                        props.setActiveStory(\"favorite\")\r\n                    }}\r\n                    selected={props.state.activeStory === 'favorite'}\r\n                    data-story=\"notifications\"\r\n                ><Icon28FavoriteOutline/></TabbarItem>\r\n                <TabbarItem\r\n                    onClick={() => {\r\n                        props.setActiveStory(\"notifications\")\r\n                    }}\r\n                    selected={props.state.activeStory === 'notifications'}\r\n                    data-story=\"notifications\"\r\n                ><Icon28Notifications/></TabbarItem>\r\n                <TabbarItem\r\n                    onClick={() => {\r\n                        props.setActiveStory(\"more\");\r\n                        props.setActiveModal(\"MODAL_PAGE_SETTINGS\")\r\n                    }}\r\n                    selected={props.state.activeStory === 'more'}\r\n                    data-story=\"more\"\r\n                ><Icon28SettingsOutline/></TabbarItem>\r\n            </Tabbar>\r\n        }>\r\n        </Epic>\r\n    );\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.main\r\n    };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setActiveStory: (activeStory) => {\r\n            dispatch(activeStoryAC(activeStory))\r\n        },\r\n        setActiveModal: (activeModel) => {\r\n            dispatch(activeModalAC(activeModel))\r\n        },\r\n        setActiveView: (activeView) => {\r\n            dispatch(activeViewAC(activeView))\r\n        },\r\n        setTypes: (types) => {\r\n            dispatch(setTypesAC(types))\r\n        },\r\n        getMovieList: (listOptions) => {\r\n            dispatch(getMovieListThunkCreator(listOptions));\r\n        },\r\n        setActiveCategory: (activeCategory) => {\r\n            dispatch(activeCategoryAC(activeCategory))\r\n        },\r\n        setSort: (sort) => {\r\n            dispatch(setSortAC(sort))\r\n        },\r\n        setOrder: (order) => {\r\n            dispatch(setOrderAC(order))\r\n        },\r\n        setCamrip: (camrip) => {\r\n            dispatch(setCamripAC(camrip))\r\n        },\r\n    };\r\n};\r\n\r\n\r\nconst EpicMenu = connect(mapStateToProps, mapDispatchToProps)(DataEpicMenu);\r\n\r\n\r\nexport default EpicMenu;\r\n","import React from 'react';\r\nimport {\r\n    FixedLayout,\r\n    Group,\r\n    HorizontalScroll,\r\n    Panel,\r\n    PanelHeader,\r\n    Tabs,\r\n    TabsItem,\r\n    View\r\n} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Main from \"./Main\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    activeArticleAC,\r\n    activeCategoryAC,\r\n    activeFilterAC,\r\n    activeModalAC,\r\n    activeStoryAC,\r\n    getMovieListThunkCreator,\r\n    heightAC,\r\n    modalHistoryAC,\r\n    setCamripAC,\r\n    setIframeUrlAC,\r\n    setMoviesInfoAC,\r\n    setOrderAC,\r\n    setSchemeAC,\r\n    setSortAC,\r\n    setTypesAC, setYearAC,\r\n    widthAC\r\n} from \"../reducers/MainReducer\";\r\nimport EpicMenu from \"./EpicMenu\";\r\n\r\nconst DataContent = (props) => {\r\n\r\n    return (\r\n        <View popout={props.state.isReady}  id={props.id} activePanel=\"tabs\" modal={props.modal}>\r\n            <Panel id=\"tabs\" >\r\n                <PanelHeader\r\n                    noShadow>\r\n                    KINOMIX\r\n                </PanelHeader>\r\n                <FixedLayout vertical=\"top\">\r\n                    <Tabs theme=\"header\" type=\"buttons\">\r\n                        <HorizontalScroll>\r\n                            <TabsItem\r\n                                onClick={() => {\r\n                                    props.setActiveCategory(\"films\");\r\n                                    props.setTypes(\"foreign-movie,russian-movie\")}}\r\n                                selected={props.state.activeCategory === 'films'}\r\n                            >\r\n                                Фильмы\r\n                            </TabsItem>\r\n                            <TabsItem\r\n                                onClick={() => {\r\n                                    props.setActiveCategory(\"cartoons\");\r\n                                    props.setTypes(\"foreign-cartoon,russian-cartoon,soviet-cartoon\")}}\r\n                                selected={props.state.activeCategory === 'cartoons'}\r\n                            >\r\n                                Мультфильмы\r\n                            </TabsItem>\r\n                            <TabsItem\r\n                                onClick={() => {\r\n                                    props.setActiveCategory(\"series\");\r\n                                    props.setTypes(\"foreign-serial,cartoon-serial,documentary-serial,russian-serial,multi-part-film,russian-documentary-serial,russian-cartoon-serial\")}}\r\n                                selected={props.state.activeCategory === 'series'}\r\n                            >\r\n                                Сериалы\r\n                            </TabsItem>\r\n                            <TabsItem\r\n                                onClick={() => {\r\n                                    props.setActiveCategory(\"anime\");\r\n                                    props.setTypes(\"anime,anime-serial\")}}\r\n                                selected={props.state.activeCategory === 'anime'}\r\n                            >\r\n                                Аниме\r\n                            </TabsItem>\r\n                        </HorizontalScroll>\r\n\r\n                    </Tabs>\r\n                    <EpicMenu />\r\n                </FixedLayout>\r\n                <Group className=\"mainContainer\">\r\n                    {props.state.filmsList.length === 0 ? <h4>Извините, ничего не найдено</h4> : <div/>}\r\n                    {props.state.isReady === null ? <Main setActiveModal={props.setActiveModal} setIframeUrl={props.setIframeUrl}\r\n                                                 list={props.state.filmsList} setMoviesInfo={props.setMoviesInfo}/> : <div></div>}\r\n                </Group>\r\n            </Panel>\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.main\r\n    };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setActiveArticle: (article) => {\r\n            dispatch(activeArticleAC(article))\r\n        },\r\n        setActiveFilter: (activeFilter) => {\r\n            dispatch(activeFilterAC(activeFilter))\r\n        },\r\n        setActiveStory: (activeStory) => {\r\n            dispatch(activeStoryAC(activeStory))\r\n        },\r\n        setActiveCategory: (activeCategory) => {\r\n            dispatch(activeCategoryAC(activeCategory))\r\n        },\r\n        setActiveModal: (activeModel) => {\r\n            dispatch(activeModalAC(activeModel))\r\n        },\r\n        setModalHistory: (modalHistory) => {\r\n            dispatch(modalHistoryAC(modalHistory))\r\n        },\r\n        setIframeUrl: (defaultIframeUrl) => {\r\n            dispatch(setIframeUrlAC(defaultIframeUrl))\r\n        },\r\n        setMoviesInfo: (moviesInfo) => {\r\n            dispatch(setMoviesInfoAC(moviesInfo))\r\n        },\r\n        setScheme: (scheme) => {\r\n            dispatch(setSchemeAC(scheme.currentTarget.checked))\r\n        },\r\n        setWidth: (width) => {\r\n            dispatch(widthAC(width))\r\n        },\r\n        setHeight: (height) => {\r\n            dispatch(heightAC(height))\r\n        },\r\n        getMovieList: (listOptions) => {\r\n            dispatch(getMovieListThunkCreator(listOptions));\r\n        },\r\n        setSort: (sort) => {\r\n            dispatch(setSortAC(sort))\r\n        },\r\n        setOrder: (order) => {\r\n            dispatch(setOrderAC(order))\r\n        },\r\n        setTypes: (types) => {\r\n            dispatch(setTypesAC(types))\r\n        },\r\n        setCamrip: (camrip) => {\r\n            dispatch(setCamripAC(camrip))\r\n        },\r\n        setYear: (year) => {\r\n            dispatch(setYearAC(year))\r\n        }\r\n    };\r\n};\r\n\r\n\r\nconst Content = connect(mapStateToProps, mapDispatchToProps)(DataContent);\r\n\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport {\r\n    FixedLayout,\r\n    Group,\r\n    Panel,\r\n    PanelHeader,\r\n    View, Switch, Cell\r\n} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    activeArticleAC,\r\n    activeCategoryAC,\r\n    activeFilterAC,\r\n    activeModalAC,\r\n    activeStoryAC, activeViewAC,\r\n    getMovieListThunkCreator,\r\n    heightAC,\r\n    modalHistoryAC, onChangeFilterCategoryAC, onChangeSearchAC, searchMovieThunkCreator,\r\n    setCamripAC, setGenresAC,\r\n    setIframeUrlAC,\r\n    setMoviesInfoAC,\r\n    setOrderAC,\r\n    setSchemeAC,\r\n    setSortAC,\r\n    setTypesAC, setYearAC,\r\n    widthAC\r\n} from \"../reducers/MainReducer\";\r\nimport EpicMenu from \"./EpicMenu\";\r\nimport HeaderButton from \"@vkontakte/vkui/dist/es6/components/HeaderButton/HeaderButton\";\r\nimport Button from \"@vkontakte/vkui/dist/es6/components/Button/Button\";\r\nimport FormLayout from \"@vkontakte/vkui/dist/es6/components/FormLayout/FormLayout\";\r\nimport Select from \"@vkontakte/vkui/dist/es6/components/Select/Select\";\r\nimport FormLayoutGroup from \"@vkontakte/vkui/dist/es6/components/FormLayoutGroup/FormLayoutGroup\";\r\nimport Input from \"@vkontakte/vkui/dist/es6/components/Input/Input\";\r\nimport Div from \"@vkontakte/vkui/dist/es6/components/Div/Div\";\r\n\r\n\r\nconst SubSelect = (props) => {\r\n    return (\r\n            <Select placeholder=\"Выберите подкатегорию\"  onChange={props.setTypesFilter} id='searchSubCategory' >\r\n                {props.subCategory.map((category) => <option key={category.name} value={category.value}> {category.name} </option>)}\r\n            </Select>\r\n)\r\n};\r\n\r\n\r\n\r\nconst DataSearchFilter = (props) => {\r\n\r\n    return (\r\n        <View id={props.id} activePanel=\"filter\">\r\n            <Panel id=\"filter\" className='searchContainer'>\r\n                <PanelHeader\r\n                    addon={<HeaderButton onClick={() => {\r\n                        props.setActiveView(\"content\");\r\n                        props.setActiveStory(null);\r\n                        props.setActiveCategory(null);\r\n                    }}>Назад</HeaderButton>}\r\n                    noShadow>\r\n                    Фильтры\r\n                </PanelHeader>\r\n                <FixedLayout vertical=\"top\">\r\n                    <EpicMenu/>\r\n                </FixedLayout>\r\n                <Group  title=\"Поиск фильма\">\r\n                    <FormLayout>\r\n                        <Input value={props.state.search} onChange={props.onChangeSearch} type=\"text\"\r\n                               placeholder=\"введите название фильма\"/>\r\n                        {props.state.search ? <Button size=\"xl\" onClick={() => {\r\n                            props.searchMovie(props.state.search);\r\n                            props.setActiveView(\"content\");\r\n                            props.setActiveStory(null);\r\n                            props.setActiveCategory(null);\r\n                        }}>Найти</Button> : <Button size=\"xl\" disabled>Найти</Button>}\r\n                    </FormLayout>\r\n                </Group>\r\n                <Group title=\"Фильтры\">\r\n                    <FormLayout>\r\n                        <FormLayoutGroup>\r\n                            <Select top=\"Категория\" placeholder=\"Выберите категорию\" id='searchCategory' onChange={props.onChangeFilterCategory} >\r\n                                <option value=\"movie\">Фильмы</option>\r\n                                <option value=\"cartoons\">Мультфильмы</option>\r\n                                <option value=\"series\">Сериалы</option>\r\n                                <option value=\"anime\">Аниме</option>\r\n                            </Select>\r\n                            {props.state.subCategory.length > 0 ? <SubSelect setTypesFilter={props.setTypesFilter} subCategory={props.state.subCategory}/> : <div></div>}\r\n                            <Select top=\"Жанр\" placeholder=\"выбирете жанр\" onChange={props.setGenres}>\r\n                                <option value=\"биография\">биография</option>\r\n                                <option value=\"боевик\">боевик</option>\r\n                                <option value=\"вестерн\">вестерн</option>\r\n                                <option value=\"военный\">военный</option>\r\n                                <option value=\"детектив\">детектив</option>\r\n                                <option value=\"драма\">драма</option>\r\n                                <option value=\"история\">история</option>\r\n                                <option value=\"комедия\">комедия</option>\r\n                                <option value=\"криминал\">криминал</option>\r\n                                <option value=\"мелодрама\">мелодрама</option>\r\n                                <option value=\"музыка\">музыка</option>\r\n                                <option value=\"мультфильм\">мультфильм</option>\r\n                                <option value=\"приключения\">приключения</option>\r\n                                <option value=\"семейный\">семейный</option>\r\n                                <option value=\"спорт\">спорт</option>\r\n                                <option value=\"триллер\">триллер</option>\r\n                                <option value=\"ужасы\">ужасы</option>\r\n                                <option value=\"фантастика\">фантастика</option>\r\n                                <option value=\"фэнтези\">фэнтези</option>\r\n                            </Select>\r\n                            <Cell asideContent={<Switch   checked={props.state.nextListOptions.camrip} onChange={props.setCamrip}/>}>\r\n                                Качество CamRip\r\n                            </Cell>\r\n\r\n                        </FormLayoutGroup>\r\n                    </FormLayout>\r\n                </Group>\r\n                <Group title=\"Сортировка\">\r\n                    <FormLayout>\r\n                        <FormLayoutGroup>\r\n                            <Select top=\"Сортровка\" placeholder=\"Сортировать по\" onChange={props.setSort} >\r\n                                <option value=\"updated_at\">Дате обнофления</option>\r\n                                <option value=\"year\">Год фильма</option>\r\n                                <option value=\"created_at\">Дате добавлени</option>\r\n                            </Select>\r\n                            <Select top=\"Направление сортировки\" placeholder=\"Направление сортировки\" onChange={props.setOrder} >\r\n                                <option value=\"desc\">По убыванию</option>\r\n                                <option value=\"asc\">По возрастанию</option>\r\n                            </Select>\r\n                        </FormLayoutGroup>\r\n                    </FormLayout>\r\n                </Group>\r\n\r\n                <Div>\r\n                    <Button size=\"xl\" onClick={() => {\r\n                        props.setActiveView(\"content\");\r\n                        props.setActiveStory(null);\r\n                        props.setActiveCategory(null);\r\n                    }}>Готово</Button>\r\n                </Div>\r\n            </Panel>\r\n\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.main\r\n    };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setActiveArticle: (article) => {\r\n            dispatch(activeArticleAC(article))\r\n        },\r\n        setActiveView: (activeView) => {\r\n            dispatch(activeViewAC(activeView))\r\n        },\r\n        setActiveFilter: (activeFilter) => {\r\n            dispatch(activeFilterAC(activeFilter))\r\n        },\r\n        setActiveStory: (activeStory) => {\r\n            dispatch(activeStoryAC(activeStory))\r\n        },\r\n        setActiveCategory: (activeCategory) => {\r\n            dispatch(activeCategoryAC(activeCategory))\r\n        },\r\n        setActiveModal: (activeModel) => {\r\n            dispatch(activeModalAC(activeModel))\r\n        },\r\n        setModalHistory: (modalHistory) => {\r\n            dispatch(modalHistoryAC(modalHistory))\r\n        },\r\n        setIframeUrl: (defaultIframeUrl) => {\r\n            dispatch(setIframeUrlAC(defaultIframeUrl))\r\n        },\r\n        setMoviesInfo: (moviesInfo) => {\r\n            dispatch(setMoviesInfoAC(moviesInfo))\r\n        },\r\n        setScheme: (scheme) => {\r\n            dispatch(setSchemeAC(scheme.currentTarget.checked))\r\n        },\r\n        setWidth: (width) => {\r\n            dispatch(widthAC(width))\r\n        },\r\n        setHeight: (height) => {\r\n            dispatch(heightAC(height))\r\n        },\r\n        getMovieList: (listOptions) => {\r\n            dispatch(getMovieListThunkCreator(listOptions));\r\n        },\r\n        setSort: (e) => {\r\n            dispatch(setSortAC(e.currentTarget.value))\r\n        },\r\n        setOrder: (e) => {\r\n            dispatch(setOrderAC(e.currentTarget.value))\r\n        },\r\n        setTypesFilter: (e) => {\r\n            dispatch(setTypesAC(e.currentTarget.value))\r\n        },\r\n        setCamrip: (e) => {\r\n            dispatch(setCamripAC(e.currentTarget.checked))\r\n        },\r\n        setYear: (year) => {\r\n            dispatch(setYearAC(year))\r\n        },\r\n        onChangeSearch: (e) => {\r\n            dispatch(onChangeSearchAC(e.currentTarget.value))\r\n        },\r\n        onChangeFilterCategory: (e) => {\r\n            dispatch(onChangeFilterCategoryAC(e.currentTarget.value))\r\n        },\r\n        searchMovie: (title) => {\r\n            dispatch(searchMovieThunkCreator(title))\r\n        },\r\n        setGenres: (e) => {\r\n            dispatch(setGenresAC(e.currentTarget.value))\r\n        },\r\n    };\r\n};\r\n\r\n\r\nconst SearchFilter = connect(mapStateToProps, mapDispatchToProps)(DataSearchFilter);\r\n\r\n\r\nexport default SearchFilter;\r\n","import React from 'react';\nimport {\n    Div,\n    IS_PLATFORM_ANDROID, IS_PLATFORM_IOS, ModalPage, ModalPageHeader, ModalRoot, List, Cell, Switch, Root\n} from '@vkontakte/vkui';\nimport {connect} from \"react-redux\";\nimport {\n    activeArticleAC,\n    activeCategoryAC,\n    activeFilterAC,\n    activeModalAC,\n    activeStoryAC,\n    getMovieListThunkCreator,\n    heightAC,\n    modalHistoryAC, onChangeListOptionsAC,\n    setCamripAC,\n    setIframeUrlAC,\n    setMoviesInfoAC,\n    setOrderAC,\n    setSchemeAC,\n    setSortAC,\n    setTypesAC, setYearAC,\n    widthAC\n} from \"./reducers/MainReducer\";\nimport Content from \"./components/Content\";\nimport connectVK from '@vkontakte/vk-connect';\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\nimport FormLayout from \"@vkontakte/vkui/dist/es6/components/FormLayout/FormLayout\";\nimport FormLayoutGroup from \"@vkontakte/vkui/dist/es6/components/FormLayoutGroup/FormLayoutGroup\";\nimport HeaderButton from \"@vkontakte/vkui/dist/es6/components/HeaderButton/HeaderButton\";\nimport \"./App.css\"\nimport SearchFilter from \"./components/SearchFilter\";\n\n\nconst MODAL_PAGE_SETTINGS = 'MODAL_PAGE_SETTINGS';\nconst MODAL_PAGE_PLAY = 'MODAL_PAGE_PLAY';\n\n\nclass dataApp extends React.Component {\n\n    componentDidMount() {\n        connectVK.send('VKWebAppUpdateConfig', {});\n        // this.props.setWidth(window.innerWidth);\n        // this.props.setHeight(window.innerHeight);\n        this.props.getMovieList(this.props.state.currentListOptions);\n    }\n\n    componentDidUpdate() {\n        if (this.props.state.isReady === null && JSON.stringify(this.props.state.currentListOptions) !== JSON.stringify(this.props.state.nextListOptions)) {\n            this.props.onChangeListOptions(this.props.state.nextListOptions)\n            this.props.getMovieList(this.props.state.nextListOptions);\n        }\n    }\n\n    setActiveModal(activeModal) {\n        activeModal = activeModal || null;\n        let modalHistory = this.props.state.modalHistory ? [...this.props.state.modalHistory] : [];\n        if (activeModal === null) {\n            modalHistory = [];\n            this.props.setActiveStory(null);\n        } else if (modalHistory.indexOf(activeModal) !== -1) {\n            modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\n        } else {\n            modalHistory.push(activeModal);\n        }\n        this.props.setActiveModal(activeModal);\n        this.props.setModalHistory(modalHistory);\n    };\n\n    modalBack = () => {\n        this.setActiveModal(this.props.state.modalHistory[this.props.state.modalHistory.length - 2]);\n    };\n\n\n    render() {\n        const modal = (\n            <ModalRoot activeModal={this.props.state.activeModal}>\n\n                <ModalPage\n                    id={MODAL_PAGE_SETTINGS}\n                    onClose={() => {\n                        this.modalBack();\n                        this.props.setActiveStory(null)\n                    }}\n                    header={\n                        <ModalPageHeader\n                            left={IS_PLATFORM_ANDROID && <HeaderButton onClick={() => {\n                                this.modalBack()\n                            }}><Icon24Cancel/></HeaderButton>}\n                            right={<HeaderButton onClick={() => {\n                                this.modalBack()\n                            }}>{IS_PLATFORM_IOS ? 'Готово' : <Icon24Done/>}</HeaderButton>}\n                        >\n                            Настройки\n                        </ModalPageHeader>\n                    }\n                >\n                    <FormLayout>\n                        <FormLayoutGroup top=\"Тема оформления\">\n                            <List>\n                                <Cell asideContent={<Switch id=\"scheme\" checked={this.props.state.scheme} onChange={this.props.setScheme}/>}>\n                                    Темная тема\n                                </Cell>\n                            </List>\n                        </FormLayoutGroup>\n                    </FormLayout>\n                </ModalPage>\n\n                <ModalPage\n                    className='MODAL_PAGE_PLAY'\n                    id={MODAL_PAGE_PLAY}\n                    onClose={() => {\n                        this.modalBack();\n                        this.props.setActiveStory(null)\n                    }}\n                    header={\n                        <ModalPageHeader\n                            left={IS_PLATFORM_ANDROID && <HeaderButton onClick={() => {\n                                this.modalBack()\n                            }}><Icon24Cancel/></HeaderButton>}\n                            right={<HeaderButton onClick={() => {\n                                this.modalBack()\n                            }}>{IS_PLATFORM_IOS ? \"\" : <Icon24Done/>}</HeaderButton>}\n                        >\n                        </ModalPageHeader>\n                    }\n                >\n                    <FormLayout>\n                        <FormLayoutGroup>\n                            <Div>\n                                <iframe src={this.props.state.defaultIframeUrl} width=\"360\" frameBorder=\"0\"\n                                        allowFullScreen title='play'></iframe>\n                                <h1>{this.props.state.moviesInfo.title}</h1>\n                                {this.props.state.moviesInfo.year ? <p>Год: {this.props.state.moviesInfo.year}</p> : \"\"}\n                                {this.props.state.moviesInfo.created_at ? <p>Добавлен: {this.props.state.moviesInfo.created_at}</p> : \"\"}\n                            </Div>\n                        </FormLayoutGroup>\n                    </FormLayout>\n                </ModalPage>\n\n            </ModalRoot>\n        );\n\n        return (\n            <Root activeView={this.props.state.activeView}>\n                <Content id=\"content\" modal={modal}/>\n                <SearchFilter id=\"search\" modal={modal}/>\n            </Root>\n    )}\n};\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        state: state.main\n    };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        setActiveArticle: (article) => {\n            dispatch(activeArticleAC(article))\n        },\n        setActiveFilter: (activeFilter) => {\n            dispatch(activeFilterAC(activeFilter))\n        },\n        setActiveStory: (activeStory) => {\n            dispatch(activeStoryAC(activeStory))\n        },\n        setActiveCategory: (activeCategory) => {\n            dispatch(activeCategoryAC(activeCategory))\n        },\n        setActiveModal: (activeModel) => {\n            dispatch(activeModalAC(activeModel))\n        },\n        setModalHistory: (modalHistory) => {\n            dispatch(modalHistoryAC(modalHistory))\n        },\n        setIframeUrl: (defaultIframeUrl) => {\n            dispatch(setIframeUrlAC(defaultIframeUrl))\n        },\n        setMoviesInfo: (moviesInfo) => {\n            dispatch(setMoviesInfoAC(moviesInfo))\n        },\n        setScheme: (scheme) => {\n            dispatch(setSchemeAC(scheme.currentTarget.checked))\n        },\n        setWidth: (width) => {\n            dispatch(widthAC(width))\n        },\n        setHeight: (height) => {\n            dispatch(heightAC(height))\n        },\n        getMovieList: (listOptions) => {\n            dispatch(getMovieListThunkCreator(listOptions));\n        },\n        setSort: (sort) => {\n            dispatch(setSortAC(sort))\n        },\n        setOrder: (order) => {\n            dispatch(setOrderAC(order))\n        },\n        setTypes: (types) => {\n            dispatch(setTypesAC(types))\n        },\n        setCamrip: (camrip) => {\n            dispatch(setCamripAC(camrip))\n        },\n        setYear: (year) => {\n            dispatch(setYearAC(year))\n        },\n        onChangeListOptions: (nextListOptions) => {\n            dispatch(onChangeListOptionsAC(nextListOptions))\n        },\n\n    };\n};\n\nconst App = connect(mapStateToProps, mapDispatchToProps)(dataApp);\n\nexport default App;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport MainReducer from \"./MainReducer\";\r\n\r\nexport let reducers = combineReducers({\r\n    main: MainReducer\r\n});\r\n\r\nlet store = createStore(reducers,\r\n    applyMiddleware(thunk));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\nimport store from \"./reducers/ReduxStore\";\nimport {Provider} from \"react-redux\";\n\n\n// import registerServiceWorker from './sw';\n// connect.subscribe((e) => {\n//     switch (e.detail.type) {\n//         case 'VKWebAppUpdateConfig':\n//             let schemeAttribute = document.createAttribute('scheme');\n//             schemeAttribute.value = e.detail.data.scheme ? e.detail.data.scheme : 'client_light';\n//             document.body.attributes.setNamedItem(schemeAttribute);\n//             break;\n//\n//         default:\n//             console.log(e.detail.type);\n//     }\n// });\n\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root'))\n"],"sourceRoot":""}