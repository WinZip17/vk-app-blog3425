{"version":3,"sources":["App.js","panels/Persik.js","reducers/MainReducer.js","reducers/ReduxStore.js","index.js","img/persik.png"],"names":["App","platform","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","go","e","setState","activePanel","currentTarget","dataset","to","state","fetchedUser","activeTab1","activeTab2","_this2","connect","subscribe","detail","type","data","console","log","send","_this3","react_default","a","createElement","es6","id","noShadow","vertical","theme","onClick","selected","title","React","Component","initialState","token","isVisible","MainReducer","arguments","length","undefined","action","objectSpread","reducers","combineReducers","userList","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","react_redux_es","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.bff60da1.chunk.js","sourcesContent":["import React from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport {\n\tFixedLayout,\n\tGroup,\n\tHorizontalScroll,\n\tPanel,\n\tPanelHeader,\n\tplatform,\n\tTabs,\n\tTabsItem,\n\tView,\n\tIOS,\n    Counter,\n    HeaderButton,\n    Div,\n    Root\n} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\n\n\nconst osname = platform();\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t\tactiveTab1: 'recomendations',\n\t\t\tactiveTab2: 'all'\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n// <View activePanel={this.state.activePanel}>\n// <Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} />\n// <Persik id=\"persik\" go={this.go} />\n// </View>\n\n\trender() {\n\t\treturn (\n                <View activePanel=\"tabs\">\n                    <Panel id=\"tabs\">\n                        <PanelHeader\n                            noShadow>\n                            Заголовочек\n                        </PanelHeader>\n                        <FixedLayout vertical=\"top\">\n                            <Tabs theme=\"header\" type=\"buttons\">\n                                <HorizontalScroll>\n                                    <TabsItem\n                                        onClick={() => this.setState({activeTab1: 'films'})}\n                                        selected={this.state.activeTab1 === 'films'}\n                                    >\n                                        Фильмы\n                                    </TabsItem>\n                                    <TabsItem\n                                        onClick={() => this.setState({activeTab1: 'cartoons'})}\n                                        selected={this.state.activeTab1 === 'cartoons'}\n                                    >\n                                        Мультфильмы\n                                    </TabsItem>\n                                    <TabsItem\n                                        onClick={() => this.setState({activeTab1: 'series'})}\n                                        selected={this.state.activeTab1 === 'series'}\n                                    >\n                                        Сериалы\n                                    </TabsItem>\n                                    <TabsItem\n                                        onClick={() => this.setState({activeTab1: 'anime'})}\n                                        selected={this.state.activeTab1 === 'anime'}\n                                    >\n                                        Аниме\n                                    </TabsItem>\n                                </HorizontalScroll>\n                            </Tabs>\n                        </FixedLayout>\n                        <Group title=\"фильтры\">\n                            <Tabs type=\"buttons\">\n                                <HorizontalScroll>\n                                    <TabsItem\n                                        onClick={() => this.setState({activeTab2: 'yar'})}\n                                        selected={this.state.activeTab2 === 'yar'}\n                                    >\n                                        Год\n                                    </TabsItem>\n                                    <TabsItem\n                                        onClick={() => this.setState({activeTab2: 'genre'})}\n                                        selected={this.state.activeTab2 === 'genre'}\n                                    >\n                                        Жанр\n                                    </TabsItem>\n                                    <TabsItem\n                                        onClick={() => this.setState({activeTab2: 'inter'})}\n                                        selected={this.state.activeTab2 === 'inter'}\n                                    >\n                                        Сначала интересные\n                                    </TabsItem>\n                                    <TabsItem\n                                        onClick={() => this.setState({activeTab2: 'top'})}\n                                        selected={this.state.activeTab2 === 'top'}\n                                    >\n                                        Топ 10 интересных\n                                    </TabsItem>\n                                </HorizontalScroll>\n                            </Tabs>\n                        </Group>\n                    </Panel>\n                </View>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, HeaderButton, platform, IOS} from '@vkontakte/vkui';\nimport persik from '../img/persik.png';\nimport './Persik.css';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","\r\nconst SET_TOKEN = 'SET_TOKEN';\r\n\r\n\r\n\r\nlet initialState = {\r\n    token: \"\",\r\n    isVisible: false\r\n};\r\n\r\nconst MainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TOKEN:\r\n            return {...state, token: action.token};\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n// const showPositionAC = (positionData) => ({type: SHOW_POSITION, positionData: positionData});\r\nconst setTokenAC = (token) => ({type: SET_TOKEN, token: token});\r\n\r\n\r\n\r\n// export const getTokenThunkCreator = () => {\r\n//     return (dispatch) => {\r\n//         API.getToken()\r\n//             .then(data => {\r\n//                 dispatch(setTokenAC(data));\r\n//             })\r\n//     }\r\n// };\r\n\r\n\r\n\r\nexport default MainReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport MainReducer from \"./MainReducer\";\r\n\r\nexport let reducers = combineReducers({\r\n    userList: MainReducer\r\n});\r\n\r\nlet store = createStore(reducers,\r\n    applyMiddleware(thunk));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\nimport store from \"./reducers/ReduxStore\";\nimport {Provider} from \"react-redux\";\n\n\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root'))\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}